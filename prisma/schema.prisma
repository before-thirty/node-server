generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = ""
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  contents   Content[]
  tripUsers  TripUser[]
}

model Trip {
  id         String    @id @default(uuid())
  name       String
  startDate  DateTime
  endDate    DateTime
  description String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  tripUsers  TripUser[]
  contents   Content[]
}

model TripUser {
  id        String    @id @default(uuid())
  tripId    String
  userId    String
  role      String
  createdAt DateTime  @default(now())

  trip      Trip      @relation(fields: [tripId], references: [id])
  user      User      @relation(fields: [userId], references: [id])

  @@unique([tripId, userId]) // Prevent duplicate user-trip associations
}

model Content {
  id         String    @id @default(uuid())
  url        String    @unique
  metadata   Json
  userId     String
  tripId     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  user       User      @relation(fields: [userId], references: [id])
  trip       Trip      @relation(fields: [tripId], references: [id])
  pins       Pin[]
}

model Pin {
  id         String    @id @default(uuid())
  name       String
  location   Json
  category   String
  description String?
  contentId  String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  content    Content   @relation(fields: [contentId], references: [id])
}

model PlaceCache {
  id          String    @id @default(uuid())
  placeId     String    @unique
  lat         Float
  lng         Float
  createdAt   DateTime  @default(now())
  lastCached  DateTime
}
